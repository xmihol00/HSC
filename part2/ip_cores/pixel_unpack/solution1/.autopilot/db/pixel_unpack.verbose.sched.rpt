

================================================================
== Vivado HLS Report for 'pixel_unpack'
================================================================
* Date:           Mon Mar  1 13:01:21 2021

* Version:        2020.1 (Build 2897737 on Wed May 27 20:21:37 MDT 2020)
* Project:        pixel_unpack
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+---------+----------+------------+
    |  Clock |  Target | Estimated| Uncertainty|
    +--------+---------+----------+------------+
    |ap_clk  | 7.00 ns | 2.302 ns |   0.88 ns  |
    +--------+---------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        ?|        ?|         ?|         ?|    ?|    ?|   none  |
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+---------+---------+----------+-----------+-----------+------+----------+
        |          |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name|   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+---------+---------+----------+-----------+-----------+------+----------+
        |- Loop 1  |        ?|        ?|         7|          4|          4|     ?|    yes   |
        |- Loop 2  |        ?|        ?|         2|          1|          1|     ?|    yes   |
        |- Loop 3  |        ?|        ?|         5|          4|          4|     ?|    yes   |
        |- Loop 4  |        ?|        ?|         3|          2|          2|     ?|    yes   |
        |- Loop 5  |        ?|        ?|         3|          2|          2|     ?|    yes   |
        +----------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 2, depth = 3
  * Pipeline-1: initiation interval (II) = 2, depth = 3
  * Pipeline-2: initiation interval (II) = 4, depth = 5
  * Pipeline-3: initiation interval (II) = 1, depth = 2
  * Pipeline-4: initiation interval (II) = 4, depth = 7


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 27
* Pipeline : 5
  Pipeline-0 : II = 2, D = 3, States = { 3 4 5 }
  Pipeline-1 : II = 2, D = 3, States = { 7 8 9 }
  Pipeline-2 : II = 4, D = 5, States = { 11 12 13 14 15 }
  Pipeline-3 : II = 1, D = 2, States = { 17 18 }
  Pipeline-4 : II = 4, D = 7, States = { 20 21 22 23 24 25 26 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 27 3 7 11 17 20 
3 --> 4 
4 --> 5 
5 --> 6 3 
6 --> 27 
7 --> 8 
8 --> 9 
9 --> 10 7 
10 --> 27 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 16 11 
16 --> 27 
17 --> 18 
18 --> 19 17 
19 --> 27 
20 --> 21 
21 --> 22 
22 --> 23 
23 --> 24 
24 --> 25 
25 --> 26 
26 --> 27 20 
27 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.00>
ST_1 : Operation 28 [2/2] (1.00ns)   --->   "%mode_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %mode)"   --->   Operation 28 'read' 'mode_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>

State 2 <SV = 1> <Delay = 2.30>
ST_2 : Operation 29 [1/2] (1.00ns)   --->   "%mode_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %mode)"   --->   Operation 29 'read' 'mode_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_2 : Operation 30 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %stream_in_32_data_V), !map !46"   --->   Operation 30 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 31 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %stream_in_32_user_V), !map !52"   --->   Operation 31 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 32 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %stream_in_32_last_V), !map !56"   --->   Operation 32 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 33 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i24* %stream_out_24_data_V), !map !60"   --->   Operation 33 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 34 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %stream_out_24_user_V), !map !66"   --->   Operation 34 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 35 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %stream_out_24_last_V), !map !70"   --->   Operation 35 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 36 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %mode), !map !74"   --->   Operation 36 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 37 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([13 x i8]* @pixel_unpack_str) nounwind"   --->   Operation 37 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 38 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 0, [13 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [pixel_unpack/pixel_unpack.cpp:27]   --->   Operation 38 'specinterface' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 39 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecClockDomain([8 x i8]* @p_str2, [1 x i8]* @p_str1) nounwind" [pixel_unpack/pixel_unpack.cpp:30]   --->   Operation 39 'specclockdomain' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 40 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 %mode, [10 x i8]* @p_str3, i32 1, i32 1, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [8 x i8]* @p_str4, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [pixel_unpack/pixel_unpack.cpp:31]   --->   Operation 40 'specinterface' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 41 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %stream_in_32_data_V, i1* %stream_in_32_user_V, i1* %stream_in_32_last_V, [5 x i8]* @p_str5, i32 1, i32 1, [5 x i8]* @p_str6, i32 0, i32 24, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [pixel_unpack/pixel_unpack.cpp:32]   --->   Operation 41 'specinterface' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 42 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i24* %stream_out_24_data_V, i1* %stream_out_24_user_V, i1* %stream_out_24_last_V, [5 x i8]* @p_str5, i32 1, i32 1, [5 x i8]* @p_str6, i32 0, i32 96, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [pixel_unpack/pixel_unpack.cpp:33]   --->   Operation 42 'specinterface' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 43 [1/1] (1.30ns)   --->   "switch i32 %mode_read, label %.loopexit [
    i32 0, label %hls_label_0.preheader
    i32 1, label %hls_label_1.preheader
    i32 2, label %hls_label_2.preheader
    i32 3, label %hls_label_3.preheader
    i32 4, label %hls_label_4.preheader
  ]" [pixel_unpack/pixel_unpack.cpp:36]   --->   Operation 43 'switch' <Predicate = true> <Delay = 1.30>
ST_2 : Operation 44 [1/1] (0.00ns)   --->   "br label %hls_label_4" [pixel_unpack/pixel_unpack.cpp:105]   --->   Operation 44 'br' <Predicate = (mode_read == 4)> <Delay = 0.00>
ST_2 : Operation 45 [1/1] (0.00ns)   --->   "br label %hls_label_3" [pixel_unpack/pixel_unpack.cpp:88]   --->   Operation 45 'br' <Predicate = (mode_read == 3)> <Delay = 0.00>
ST_2 : Operation 46 [1/1] (0.00ns)   --->   "br label %hls_label_2" [pixel_unpack/pixel_unpack.cpp:71]   --->   Operation 46 'br' <Predicate = (mode_read == 2)> <Delay = 0.00>
ST_2 : Operation 47 [1/1] (0.00ns)   --->   "br label %hls_label_1" [pixel_unpack/pixel_unpack.cpp:59]   --->   Operation 47 'br' <Predicate = (mode_read == 1)> <Delay = 0.00>
ST_2 : Operation 48 [1/1] (0.00ns)   --->   "br label %hls_label_0" [pixel_unpack/pixel_unpack.cpp:38]   --->   Operation 48 'br' <Predicate = (mode_read == 0)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 0.00>
ST_3 : Operation 49 [1/1] (0.00ns)   --->   "%empty_13 = call { i32, i1, i1 } @_ssdm_op_Read.axis.volatile.i32P.i1P.i1P(i32* %stream_in_32_data_V, i1* %stream_in_32_user_V, i1* %stream_in_32_last_V)" [pixel_unpack/pixel_unpack.cpp:25]   --->   Operation 49 'read' 'empty_13' <Predicate = true> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_3 : Operation 50 [1/1] (0.00ns)   --->   "%data_V_2 = extractvalue { i32, i1, i1 } %empty_13, 0" [pixel_unpack/pixel_unpack.cpp:25]   --->   Operation 50 'extractvalue' 'data_V_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 51 [1/1] (0.00ns)   --->   "%user_V_2 = extractvalue { i32, i1, i1 } %empty_13, 1" [pixel_unpack/pixel_unpack.cpp:25]   --->   Operation 51 'extractvalue' 'user_V_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 52 [1/1] (0.00ns)   --->   "%last_2 = extractvalue { i32, i1, i1 } %empty_13, 2" [pixel_unpack/pixel_unpack.cpp:25]   --->   Operation 52 'extractvalue' 'last_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 53 [1/1] (0.00ns)   --->   "%p_Result_s = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %data_V_2, i32 8, i32 15)" [pixel_unpack/pixel_unpack.cpp:114]   --->   Operation 53 'partselect' 'p_Result_s' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 54 [1/1] (0.00ns)   --->   "%p_Result_1 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %data_V_2, i32 24, i32 31)" [pixel_unpack/pixel_unpack.cpp:115]   --->   Operation 54 'partselect' 'p_Result_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 55 [1/1] (0.00ns)   --->   "%trunc_ln414 = trunc i32 %data_V_2 to i16" [pixel_unpack/pixel_unpack.cpp:115]   --->   Operation 55 'trunc' 'trunc_ln414' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 56 [1/1] (0.00ns)   --->   "%p_Result_2 = call i24 @_ssdm_op_BitConcatenate.i24.i8.i16(i8 %p_Result_1, i16 %trunc_ln414)" [pixel_unpack/pixel_unpack.cpp:115]   --->   Operation 56 'bitconcatenate' 'p_Result_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 57 [2/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i24P.i1P.i1P(i24* %stream_out_24_data_V, i1* %stream_out_24_user_V, i1* %stream_out_24_last_V, i24 %p_Result_2, i1 %user_V_2, i1 false)" [pixel_unpack/pixel_unpack.cpp:25]   --->   Operation 57 'write' <Predicate = true> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_3 : Operation 58 [1/1] (0.00ns)   --->   "%p_Result_9_1 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %data_V_2, i32 16, i32 23)" [pixel_unpack/pixel_unpack.cpp:113]   --->   Operation 58 'partselect' 'p_Result_9_1' <Predicate = true> <Delay = 0.00>

State 4 <SV = 3> <Delay = 0.00>
ST_4 : Operation 59 [1/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i24P.i1P.i1P(i24* %stream_out_24_data_V, i1* %stream_out_24_user_V, i1* %stream_out_24_last_V, i24 %p_Result_2, i1 %user_V_2, i1 false)" [pixel_unpack/pixel_unpack.cpp:25]   --->   Operation 59 'write' <Predicate = true> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_4 : Operation 60 [1/1] (0.00ns)   --->   "%p_Result_14_1 = call i24 @_ssdm_op_BitConcatenate.i24.i8.i8.i8(i8 %p_Result_1, i8 %p_Result_s, i8 %p_Result_9_1)" [pixel_unpack/pixel_unpack.cpp:115]   --->   Operation 60 'bitconcatenate' 'p_Result_14_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 61 [2/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i24P.i1P.i1P(i24* %stream_out_24_data_V, i1* %stream_out_24_user_V, i1* %stream_out_24_last_V, i24 %p_Result_14_1, i1 false, i1 %last_2)" [pixel_unpack/pixel_unpack.cpp:25]   --->   Operation 61 'write' <Predicate = true> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_4 : Operation 62 [1/1] (0.00ns)   --->   "br i1 %last_2, label %.loopexit.loopexit, label %hls_label_4" [pixel_unpack/pixel_unpack.cpp:105]   --->   Operation 62 'br' <Predicate = true> <Delay = 0.00>

State 5 <SV = 4> <Delay = 0.00>
ST_5 : Operation 63 [1/1] (0.00ns)   --->   "%tmp_8 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str11)" [pixel_unpack/pixel_unpack.cpp:105]   --->   Operation 63 'specregionbegin' 'tmp_8' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 64 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 2, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind" [pixel_unpack/pixel_unpack.cpp:106]   --->   Operation 64 'specpipeline' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 65 [1/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i24P.i1P.i1P(i24* %stream_out_24_data_V, i1* %stream_out_24_user_V, i1* %stream_out_24_last_V, i24 %p_Result_14_1, i1 false, i1 %last_2)" [pixel_unpack/pixel_unpack.cpp:25]   --->   Operation 65 'write' <Predicate = true> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_5 : Operation 66 [1/1] (0.00ns)   --->   "%empty_14 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str11, i32 %tmp_8)" [pixel_unpack/pixel_unpack.cpp:121]   --->   Operation 66 'specregionend' 'empty_14' <Predicate = true> <Delay = 0.00>

State 6 <SV = 5> <Delay = 0.00>
ST_6 : Operation 67 [1/1] (0.00ns)   --->   "br label %.loopexit"   --->   Operation 67 'br' <Predicate = true> <Delay = 0.00>

State 7 <SV = 2> <Delay = 0.00>
ST_7 : Operation 68 [1/1] (0.00ns)   --->   "%empty_11 = call { i32, i1, i1 } @_ssdm_op_Read.axis.volatile.i32P.i1P.i1P(i32* %stream_in_32_data_V, i1* %stream_in_32_user_V, i1* %stream_in_32_last_V)" [pixel_unpack/pixel_unpack.cpp:25]   --->   Operation 68 'read' 'empty_11' <Predicate = true> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_7 : Operation 69 [1/1] (0.00ns)   --->   "%data_V_1 = extractvalue { i32, i1, i1 } %empty_11, 0" [pixel_unpack/pixel_unpack.cpp:25]   --->   Operation 69 'extractvalue' 'data_V_1' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 70 [1/1] (0.00ns)   --->   "%user_V_1 = extractvalue { i32, i1, i1 } %empty_11, 1" [pixel_unpack/pixel_unpack.cpp:25]   --->   Operation 70 'extractvalue' 'user_V_1' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 71 [1/1] (0.00ns)   --->   "%last_1 = extractvalue { i32, i1, i1 } %empty_11, 2" [pixel_unpack/pixel_unpack.cpp:25]   --->   Operation 71 'extractvalue' 'last_1' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 72 [1/1] (0.00ns)   --->   "%trunc_ln647_5 = trunc i32 %data_V_1 to i16" [pixel_unpack/pixel_unpack.cpp:96]   --->   Operation 72 'trunc' 'trunc_ln647_5' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 73 [1/1] (0.00ns)   --->   "%zext_ln414_4 = zext i16 %trunc_ln647_5 to i24" [pixel_unpack/pixel_unpack.cpp:96]   --->   Operation 73 'zext' 'zext_ln414_4' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 74 [2/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i24P.i1P.i1P(i24* %stream_out_24_data_V, i1* %stream_out_24_user_V, i1* %stream_out_24_last_V, i24 %zext_ln414_4, i1 %user_V_1, i1 false)" [pixel_unpack/pixel_unpack.cpp:25]   --->   Operation 74 'write' <Predicate = true> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_7 : Operation 75 [1/1] (0.00ns)   --->   "%p_Result_7_1 = call i16 @_ssdm_op_PartSelect.i16.i32.i32.i32(i32 %data_V_1, i32 16, i32 31)" [pixel_unpack/pixel_unpack.cpp:96]   --->   Operation 75 'partselect' 'p_Result_7_1' <Predicate = true> <Delay = 0.00>

State 8 <SV = 3> <Delay = 0.00>
ST_8 : Operation 76 [1/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i24P.i1P.i1P(i24* %stream_out_24_data_V, i1* %stream_out_24_user_V, i1* %stream_out_24_last_V, i24 %zext_ln414_4, i1 %user_V_1, i1 false)" [pixel_unpack/pixel_unpack.cpp:25]   --->   Operation 76 'write' <Predicate = true> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_8 : Operation 77 [1/1] (0.00ns)   --->   "%zext_ln414_5 = zext i16 %p_Result_7_1 to i24" [pixel_unpack/pixel_unpack.cpp:96]   --->   Operation 77 'zext' 'zext_ln414_5' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 78 [2/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i24P.i1P.i1P(i24* %stream_out_24_data_V, i1* %stream_out_24_user_V, i1* %stream_out_24_last_V, i24 %zext_ln414_5, i1 false, i1 %last_1)" [pixel_unpack/pixel_unpack.cpp:25]   --->   Operation 78 'write' <Predicate = true> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_8 : Operation 79 [1/1] (0.00ns)   --->   "br i1 %last_1, label %.loopexit.loopexit68, label %hls_label_3" [pixel_unpack/pixel_unpack.cpp:88]   --->   Operation 79 'br' <Predicate = true> <Delay = 0.00>

State 9 <SV = 4> <Delay = 0.00>
ST_9 : Operation 80 [1/1] (0.00ns)   --->   "%tmp_7 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str10)" [pixel_unpack/pixel_unpack.cpp:88]   --->   Operation 80 'specregionbegin' 'tmp_7' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 81 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 2, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind" [pixel_unpack/pixel_unpack.cpp:89]   --->   Operation 81 'specpipeline' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 82 [1/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i24P.i1P.i1P(i24* %stream_out_24_data_V, i1* %stream_out_24_user_V, i1* %stream_out_24_last_V, i24 %zext_ln414_5, i1 false, i1 %last_1)" [pixel_unpack/pixel_unpack.cpp:25]   --->   Operation 82 'write' <Predicate = true> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_9 : Operation 83 [1/1] (0.00ns)   --->   "%empty_12 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str10, i32 %tmp_7)" [pixel_unpack/pixel_unpack.cpp:102]   --->   Operation 83 'specregionend' 'empty_12' <Predicate = true> <Delay = 0.00>

State 10 <SV = 5> <Delay = 0.00>
ST_10 : Operation 84 [1/1] (0.00ns)   --->   "br label %.loopexit"   --->   Operation 84 'br' <Predicate = true> <Delay = 0.00>

State 11 <SV = 2> <Delay = 0.00>
ST_11 : Operation 85 [1/1] (0.00ns)   --->   "%empty_9 = call { i32, i1, i1 } @_ssdm_op_Read.axis.volatile.i32P.i1P.i1P(i32* %stream_in_32_data_V, i1* %stream_in_32_user_V, i1* %stream_in_32_last_V)" [pixel_unpack/pixel_unpack.cpp:25]   --->   Operation 85 'read' 'empty_9' <Predicate = true> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_11 : Operation 86 [1/1] (0.00ns)   --->   "%data_V = extractvalue { i32, i1, i1 } %empty_9, 0" [pixel_unpack/pixel_unpack.cpp:25]   --->   Operation 86 'extractvalue' 'data_V' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 87 [1/1] (0.00ns)   --->   "%user_V = extractvalue { i32, i1, i1 } %empty_9, 1" [pixel_unpack/pixel_unpack.cpp:25]   --->   Operation 87 'extractvalue' 'user_V' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 88 [1/1] (0.00ns)   --->   "%last = extractvalue { i32, i1, i1 } %empty_9, 2" [pixel_unpack/pixel_unpack.cpp:25]   --->   Operation 88 'extractvalue' 'last' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 89 [1/1] (0.00ns)   --->   "%trunc_ln647_4 = trunc i32 %data_V to i8" [pixel_unpack/pixel_unpack.cpp:79]   --->   Operation 89 'trunc' 'trunc_ln647_4' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 90 [1/1] (0.00ns)   --->   "%zext_ln414 = zext i8 %trunc_ln647_4 to i24" [pixel_unpack/pixel_unpack.cpp:79]   --->   Operation 90 'zext' 'zext_ln414' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 91 [2/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i24P.i1P.i1P(i24* %stream_out_24_data_V, i1* %stream_out_24_user_V, i1* %stream_out_24_last_V, i24 %zext_ln414, i1 %user_V, i1 false)" [pixel_unpack/pixel_unpack.cpp:25]   --->   Operation 91 'write' <Predicate = true> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_11 : Operation 92 [1/1] (0.00ns)   --->   "%p_Result_5_1 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %data_V, i32 8, i32 15)" [pixel_unpack/pixel_unpack.cpp:79]   --->   Operation 92 'partselect' 'p_Result_5_1' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 93 [1/1] (0.00ns)   --->   "%p_Result_5_2 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %data_V, i32 16, i32 23)" [pixel_unpack/pixel_unpack.cpp:79]   --->   Operation 93 'partselect' 'p_Result_5_2' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 94 [1/1] (0.00ns)   --->   "%p_Result_5_3 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %data_V, i32 24, i32 31)" [pixel_unpack/pixel_unpack.cpp:79]   --->   Operation 94 'partselect' 'p_Result_5_3' <Predicate = true> <Delay = 0.00>

State 12 <SV = 3> <Delay = 0.00>
ST_12 : Operation 95 [1/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i24P.i1P.i1P(i24* %stream_out_24_data_V, i1* %stream_out_24_user_V, i1* %stream_out_24_last_V, i24 %zext_ln414, i1 %user_V, i1 false)" [pixel_unpack/pixel_unpack.cpp:25]   --->   Operation 95 'write' <Predicate = true> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_12 : Operation 96 [1/1] (0.00ns)   --->   "%zext_ln414_1 = zext i8 %p_Result_5_1 to i24" [pixel_unpack/pixel_unpack.cpp:79]   --->   Operation 96 'zext' 'zext_ln414_1' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 97 [2/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i24P.i1P.i1P(i24* %stream_out_24_data_V, i1* %stream_out_24_user_V, i1* %stream_out_24_last_V, i24 %zext_ln414_1, i1 false, i1 false)" [pixel_unpack/pixel_unpack.cpp:25]   --->   Operation 97 'write' <Predicate = true> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >

State 13 <SV = 4> <Delay = 0.00>
ST_13 : Operation 98 [1/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i24P.i1P.i1P(i24* %stream_out_24_data_V, i1* %stream_out_24_user_V, i1* %stream_out_24_last_V, i24 %zext_ln414_1, i1 false, i1 false)" [pixel_unpack/pixel_unpack.cpp:25]   --->   Operation 98 'write' <Predicate = true> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_13 : Operation 99 [1/1] (0.00ns)   --->   "%zext_ln414_2 = zext i8 %p_Result_5_2 to i24" [pixel_unpack/pixel_unpack.cpp:79]   --->   Operation 99 'zext' 'zext_ln414_2' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 100 [2/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i24P.i1P.i1P(i24* %stream_out_24_data_V, i1* %stream_out_24_user_V, i1* %stream_out_24_last_V, i24 %zext_ln414_2, i1 false, i1 false)" [pixel_unpack/pixel_unpack.cpp:25]   --->   Operation 100 'write' <Predicate = true> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >

State 14 <SV = 5> <Delay = 0.00>
ST_14 : Operation 101 [1/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i24P.i1P.i1P(i24* %stream_out_24_data_V, i1* %stream_out_24_user_V, i1* %stream_out_24_last_V, i24 %zext_ln414_2, i1 false, i1 false)" [pixel_unpack/pixel_unpack.cpp:25]   --->   Operation 101 'write' <Predicate = true> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_14 : Operation 102 [1/1] (0.00ns)   --->   "%zext_ln414_3 = zext i8 %p_Result_5_3 to i24" [pixel_unpack/pixel_unpack.cpp:79]   --->   Operation 102 'zext' 'zext_ln414_3' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 103 [2/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i24P.i1P.i1P(i24* %stream_out_24_data_V, i1* %stream_out_24_user_V, i1* %stream_out_24_last_V, i24 %zext_ln414_3, i1 false, i1 %last)" [pixel_unpack/pixel_unpack.cpp:25]   --->   Operation 103 'write' <Predicate = true> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_14 : Operation 104 [1/1] (0.00ns)   --->   "br i1 %last, label %.loopexit.loopexit69, label %hls_label_2" [pixel_unpack/pixel_unpack.cpp:71]   --->   Operation 104 'br' <Predicate = true> <Delay = 0.00>

State 15 <SV = 6> <Delay = 0.00>
ST_15 : Operation 105 [1/1] (0.00ns)   --->   "%tmp_6 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str9)" [pixel_unpack/pixel_unpack.cpp:71]   --->   Operation 105 'specregionbegin' 'tmp_6' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 106 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 4, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind" [pixel_unpack/pixel_unpack.cpp:72]   --->   Operation 106 'specpipeline' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 107 [1/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i24P.i1P.i1P(i24* %stream_out_24_data_V, i1* %stream_out_24_user_V, i1* %stream_out_24_last_V, i24 %zext_ln414_3, i1 false, i1 %last)" [pixel_unpack/pixel_unpack.cpp:25]   --->   Operation 107 'write' <Predicate = true> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_15 : Operation 108 [1/1] (0.00ns)   --->   "%empty_10 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str9, i32 %tmp_6)" [pixel_unpack/pixel_unpack.cpp:85]   --->   Operation 108 'specregionend' 'empty_10' <Predicate = true> <Delay = 0.00>

State 16 <SV = 7> <Delay = 0.00>
ST_16 : Operation 109 [1/1] (0.00ns)   --->   "br label %.loopexit"   --->   Operation 109 'br' <Predicate = true> <Delay = 0.00>

State 17 <SV = 2> <Delay = 0.00>
ST_17 : Operation 110 [1/1] (0.00ns)   --->   "%empty_7 = call { i32, i1, i1 } @_ssdm_op_Read.axis.volatile.i32P.i1P.i1P(i32* %stream_in_32_data_V, i1* %stream_in_32_user_V, i1* %stream_in_32_last_V)" [pixel_unpack/pixel_unpack.cpp:25]   --->   Operation 110 'read' 'empty_7' <Predicate = true> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_17 : Operation 111 [1/1] (0.00ns)   --->   "%p_Val2_s = extractvalue { i32, i1, i1 } %empty_7, 0" [pixel_unpack/pixel_unpack.cpp:25]   --->   Operation 111 'extractvalue' 'p_Val2_s' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 112 [1/1] (0.00ns)   --->   "%stream_in_32_user_V_3 = extractvalue { i32, i1, i1 } %empty_7, 1" [pixel_unpack/pixel_unpack.cpp:25]   --->   Operation 112 'extractvalue' 'stream_in_32_user_V_3' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 113 [1/1] (0.00ns)   --->   "%stream_in_32_last_V_3 = extractvalue { i32, i1, i1 } %empty_7, 2" [pixel_unpack/pixel_unpack.cpp:25]   --->   Operation 113 'extractvalue' 'stream_in_32_last_V_3' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 114 [1/1] (0.00ns)   --->   "%trunc_ln647_3 = trunc i32 %p_Val2_s to i24" [pixel_unpack/pixel_unpack.cpp:62]   --->   Operation 114 'trunc' 'trunc_ln647_3' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 115 [2/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i24P.i1P.i1P(i24* %stream_out_24_data_V, i1* %stream_out_24_user_V, i1* %stream_out_24_last_V, i24 %trunc_ln647_3, i1 %stream_in_32_user_V_3, i1 %stream_in_32_last_V_3)" [pixel_unpack/pixel_unpack.cpp:25]   --->   Operation 115 'write' <Predicate = true> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_17 : Operation 116 [1/1] (0.00ns)   --->   "br i1 %stream_in_32_last_V_3, label %.loopexit.loopexit70, label %hls_label_1" [pixel_unpack/pixel_unpack.cpp:59]   --->   Operation 116 'br' <Predicate = true> <Delay = 0.00>

State 18 <SV = 3> <Delay = 0.00>
ST_18 : Operation 117 [1/1] (0.00ns)   --->   "%tmp_5 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str8)" [pixel_unpack/pixel_unpack.cpp:59]   --->   Operation 117 'specregionbegin' 'tmp_5' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 118 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind" [pixel_unpack/pixel_unpack.cpp:60]   --->   Operation 118 'specpipeline' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 119 [1/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i24P.i1P.i1P(i24* %stream_out_24_data_V, i1* %stream_out_24_user_V, i1* %stream_out_24_last_V, i24 %trunc_ln647_3, i1 %stream_in_32_user_V_3, i1 %stream_in_32_last_V_3)" [pixel_unpack/pixel_unpack.cpp:25]   --->   Operation 119 'write' <Predicate = true> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_18 : Operation 120 [1/1] (0.00ns)   --->   "%empty_8 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str8, i32 %tmp_5)" [pixel_unpack/pixel_unpack.cpp:68]   --->   Operation 120 'specregionend' 'empty_8' <Predicate = true> <Delay = 0.00>

State 19 <SV = 4> <Delay = 0.00>
ST_19 : Operation 121 [1/1] (0.00ns)   --->   "br label %.loopexit"   --->   Operation 121 'br' <Predicate = true> <Delay = 0.00>

State 20 <SV = 2> <Delay = 0.00>
ST_20 : Operation 122 [1/1] (0.00ns)   --->   "%empty = call { i32, i1, i1 } @_ssdm_op_Read.axis.volatile.i32P.i1P.i1P(i32* %stream_in_32_data_V, i1* %stream_in_32_user_V, i1* %stream_in_32_last_V)" [pixel_unpack/pixel_unpack.cpp:25]   --->   Operation 122 'read' 'empty' <Predicate = true> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_20 : Operation 123 [1/1] (0.00ns)   --->   "%stream_in_32_data_V_s = extractvalue { i32, i1, i1 } %empty, 0" [pixel_unpack/pixel_unpack.cpp:25]   --->   Operation 123 'extractvalue' 'stream_in_32_data_V_s' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 124 [1/1] (0.00ns)   --->   "%trunc_ln647 = trunc i32 %stream_in_32_data_V_s to i24" [pixel_unpack/pixel_unpack.cpp:50]   --->   Operation 124 'trunc' 'trunc_ln647' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 125 [1/1] (0.00ns)   --->   "%tmp_1 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %stream_in_32_data_V_s, i32 24, i32 31)" [pixel_unpack/pixel_unpack.cpp:50]   --->   Operation 125 'partselect' 'tmp_1' <Predicate = true> <Delay = 0.00>

State 21 <SV = 3> <Delay = 0.00>
ST_21 : Operation 126 [1/1] (0.00ns)   --->   "%empty_4 = call { i32, i1, i1 } @_ssdm_op_Read.axis.volatile.i32P.i1P.i1P(i32* %stream_in_32_data_V, i1* %stream_in_32_user_V, i1* %stream_in_32_last_V)" [pixel_unpack/pixel_unpack.cpp:25]   --->   Operation 126 'read' 'empty_4' <Predicate = true> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_21 : Operation 127 [1/1] (0.00ns)   --->   "%stream_in_32_data_V_1 = extractvalue { i32, i1, i1 } %empty_4, 0" [pixel_unpack/pixel_unpack.cpp:25]   --->   Operation 127 'extractvalue' 'stream_in_32_data_V_1' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 128 [1/1] (0.00ns)   --->   "%trunc_ln647_1 = trunc i32 %stream_in_32_data_V_1 to i16" [pixel_unpack/pixel_unpack.cpp:50]   --->   Operation 128 'trunc' 'trunc_ln647_1' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 129 [1/1] (0.00ns)   --->   "%tmp_3 = call i16 @_ssdm_op_PartSelect.i16.i32.i32.i32(i32 %stream_in_32_data_V_1, i32 16, i32 31)" [pixel_unpack/pixel_unpack.cpp:50]   --->   Operation 129 'partselect' 'tmp_3' <Predicate = true> <Delay = 0.00>

State 22 <SV = 4> <Delay = 0.97>
ST_22 : Operation 130 [1/1] (0.00ns) (grouped into LUT with out node or_ln718_1)   --->   "%stream_in_32_user_V_s = extractvalue { i32, i1, i1 } %empty, 1" [pixel_unpack/pixel_unpack.cpp:25]   --->   Operation 130 'extractvalue' 'stream_in_32_user_V_s' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 131 [1/1] (0.00ns) (grouped into LUT with out node or_ln46_1)   --->   "%stream_in_32_last_V_s = extractvalue { i32, i1, i1 } %empty, 2" [pixel_unpack/pixel_unpack.cpp:25]   --->   Operation 131 'extractvalue' 'stream_in_32_last_V_s' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 132 [1/1] (0.00ns) (grouped into LUT with out node or_ln718_1)   --->   "%stream_in_32_user_V_1 = extractvalue { i32, i1, i1 } %empty_4, 1" [pixel_unpack/pixel_unpack.cpp:25]   --->   Operation 132 'extractvalue' 'stream_in_32_user_V_1' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 133 [1/1] (0.00ns) (grouped into LUT with out node or_ln46_1)   --->   "%stream_in_32_last_V_1 = extractvalue { i32, i1, i1 } %empty_4, 2" [pixel_unpack/pixel_unpack.cpp:25]   --->   Operation 133 'extractvalue' 'stream_in_32_last_V_1' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 134 [1/1] (0.00ns)   --->   "%empty_5 = call { i32, i1, i1 } @_ssdm_op_Read.axis.volatile.i32P.i1P.i1P(i32* %stream_in_32_data_V, i1* %stream_in_32_user_V, i1* %stream_in_32_last_V)" [pixel_unpack/pixel_unpack.cpp:25]   --->   Operation 134 'read' 'empty_5' <Predicate = true> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_22 : Operation 135 [1/1] (0.00ns)   --->   "%stream_in_32_data_V_2 = extractvalue { i32, i1, i1 } %empty_5, 0" [pixel_unpack/pixel_unpack.cpp:25]   --->   Operation 135 'extractvalue' 'stream_in_32_data_V_2' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 136 [1/1] (0.00ns) (grouped into LUT with out node or_ln718_1)   --->   "%stream_in_32_user_V_2 = extractvalue { i32, i1, i1 } %empty_5, 1" [pixel_unpack/pixel_unpack.cpp:25]   --->   Operation 136 'extractvalue' 'stream_in_32_user_V_2' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 137 [1/1] (0.00ns) (grouped into LUT with out node or_ln46_1)   --->   "%stream_in_32_last_V_2 = extractvalue { i32, i1, i1 } %empty_5, 2" [pixel_unpack/pixel_unpack.cpp:25]   --->   Operation 137 'extractvalue' 'stream_in_32_last_V_2' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 138 [1/1] (0.00ns) (grouped into LUT with out node or_ln718_1)   --->   "%or_ln718 = or i1 %stream_in_32_user_V_1, %stream_in_32_user_V_2" [pixel_unpack/pixel_unpack.cpp:45]   --->   Operation 138 'or' 'or_ln718' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 139 [1/1] (0.97ns) (out node of the LUT)   --->   "%or_ln718_1 = or i1 %or_ln718, %stream_in_32_user_V_s" [pixel_unpack/pixel_unpack.cpp:45]   --->   Operation 139 'or' 'or_ln718_1' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 140 [1/1] (0.00ns) (grouped into LUT with out node or_ln46_1)   --->   "%or_ln46 = or i1 %stream_in_32_last_V_1, %stream_in_32_last_V_2" [pixel_unpack/pixel_unpack.cpp:46]   --->   Operation 140 'or' 'or_ln46' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 141 [1/1] (0.97ns) (out node of the LUT)   --->   "%or_ln46_1 = or i1 %or_ln46, %stream_in_32_last_V_s" [pixel_unpack/pixel_unpack.cpp:46]   --->   Operation 141 'or' 'or_ln46_1' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 142 [2/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i24P.i1P.i1P(i24* %stream_out_24_data_V, i1* %stream_out_24_user_V, i1* %stream_out_24_last_V, i24 %trunc_ln647, i1 %or_ln718_1, i1 false)" [pixel_unpack/pixel_unpack.cpp:25]   --->   Operation 142 'write' <Predicate = true> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_22 : Operation 143 [1/1] (0.00ns)   --->   "%trunc_ln647_2 = trunc i32 %stream_in_32_data_V_2 to i8" [pixel_unpack/pixel_unpack.cpp:50]   --->   Operation 143 'trunc' 'trunc_ln647_2' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 144 [1/1] (0.00ns)   --->   "%p_Result_3_3 = call i24 @_ssdm_op_PartSelect.i24.i32.i32.i32(i32 %stream_in_32_data_V_2, i32 8, i32 31)" [pixel_unpack/pixel_unpack.cpp:50]   --->   Operation 144 'partselect' 'p_Result_3_3' <Predicate = true> <Delay = 0.00>

State 23 <SV = 5> <Delay = 0.00>
ST_23 : Operation 145 [1/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i24P.i1P.i1P(i24* %stream_out_24_data_V, i1* %stream_out_24_user_V, i1* %stream_out_24_last_V, i24 %trunc_ln647, i1 %or_ln718_1, i1 false)" [pixel_unpack/pixel_unpack.cpp:25]   --->   Operation 145 'write' <Predicate = true> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_23 : Operation 146 [1/1] (0.00ns)   --->   "%p_Result_3_1 = call i24 @_ssdm_op_BitConcatenate.i24.i16.i8(i16 %trunc_ln647_1, i8 %tmp_1)" [pixel_unpack/pixel_unpack.cpp:50]   --->   Operation 146 'bitconcatenate' 'p_Result_3_1' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 147 [2/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i24P.i1P.i1P(i24* %stream_out_24_data_V, i1* %stream_out_24_user_V, i1* %stream_out_24_last_V, i24 %p_Result_3_1, i1 false, i1 false)" [pixel_unpack/pixel_unpack.cpp:25]   --->   Operation 147 'write' <Predicate = true> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >

State 24 <SV = 6> <Delay = 0.00>
ST_24 : Operation 148 [1/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i24P.i1P.i1P(i24* %stream_out_24_data_V, i1* %stream_out_24_user_V, i1* %stream_out_24_last_V, i24 %p_Result_3_1, i1 false, i1 false)" [pixel_unpack/pixel_unpack.cpp:25]   --->   Operation 148 'write' <Predicate = true> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_24 : Operation 149 [1/1] (0.00ns)   --->   "%p_Result_3_2 = call i24 @_ssdm_op_BitConcatenate.i24.i8.i16(i8 %trunc_ln647_2, i16 %tmp_3)" [pixel_unpack/pixel_unpack.cpp:50]   --->   Operation 149 'bitconcatenate' 'p_Result_3_2' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 150 [2/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i24P.i1P.i1P(i24* %stream_out_24_data_V, i1* %stream_out_24_user_V, i1* %stream_out_24_last_V, i24 %p_Result_3_2, i1 false, i1 false)" [pixel_unpack/pixel_unpack.cpp:25]   --->   Operation 150 'write' <Predicate = true> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >

State 25 <SV = 7> <Delay = 0.00>
ST_25 : Operation 151 [1/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i24P.i1P.i1P(i24* %stream_out_24_data_V, i1* %stream_out_24_user_V, i1* %stream_out_24_last_V, i24 %p_Result_3_2, i1 false, i1 false)" [pixel_unpack/pixel_unpack.cpp:25]   --->   Operation 151 'write' <Predicate = true> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_25 : Operation 152 [2/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i24P.i1P.i1P(i24* %stream_out_24_data_V, i1* %stream_out_24_user_V, i1* %stream_out_24_last_V, i24 %p_Result_3_3, i1 false, i1 %or_ln46_1)" [pixel_unpack/pixel_unpack.cpp:25]   --->   Operation 152 'write' <Predicate = true> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_25 : Operation 153 [1/1] (0.00ns)   --->   "br i1 %or_ln46_1, label %.loopexit.loopexit71, label %hls_label_0" [pixel_unpack/pixel_unpack.cpp:38]   --->   Operation 153 'br' <Predicate = true> <Delay = 0.00>

State 26 <SV = 8> <Delay = 0.00>
ST_26 : Operation 154 [1/1] (0.00ns)   --->   "%tmp = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str7)" [pixel_unpack/pixel_unpack.cpp:38]   --->   Operation 154 'specregionbegin' 'tmp' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 155 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 4, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind" [pixel_unpack/pixel_unpack.cpp:39]   --->   Operation 155 'specpipeline' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 156 [1/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i24P.i1P.i1P(i24* %stream_out_24_data_V, i1* %stream_out_24_user_V, i1* %stream_out_24_last_V, i24 %p_Result_3_3, i1 false, i1 %or_ln46_1)" [pixel_unpack/pixel_unpack.cpp:25]   --->   Operation 156 'write' <Predicate = true> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_26 : Operation 157 [1/1] (0.00ns)   --->   "%empty_6 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str7, i32 %tmp)" [pixel_unpack/pixel_unpack.cpp:56]   --->   Operation 157 'specregionend' 'empty_6' <Predicate = true> <Delay = 0.00>

State 27 <SV = 9> <Delay = 0.00>
ST_27 : Operation 158 [1/1] (0.00ns)   --->   "br label %.loopexit"   --->   Operation 158 'br' <Predicate = (mode_read == 0)> <Delay = 0.00>
ST_27 : Operation 159 [1/1] (0.00ns)   --->   "ret void" [pixel_unpack/pixel_unpack.cpp:124]   --->   Operation 159 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 7ns, clock uncertainty: 0.875ns.

 <State 1>: 1ns
The critical path consists of the following:
	s_axi read on port 'mode' [8]  (1 ns)

 <State 2>: 2.3ns
The critical path consists of the following:
	s_axi read on port 'mode' [8]  (1 ns)
	blocking operation 1.3 ns on control path)

 <State 3>: 0ns
The critical path consists of the following:

 <State 4>: 0ns
The critical path consists of the following:

 <State 5>: 0ns
The critical path consists of the following:

 <State 6>: 0ns
The critical path consists of the following:

 <State 7>: 0ns
The critical path consists of the following:

 <State 8>: 0ns
The critical path consists of the following:

 <State 9>: 0ns
The critical path consists of the following:

 <State 10>: 0ns
The critical path consists of the following:

 <State 11>: 0ns
The critical path consists of the following:

 <State 12>: 0ns
The critical path consists of the following:

 <State 13>: 0ns
The critical path consists of the following:

 <State 14>: 0ns
The critical path consists of the following:

 <State 15>: 0ns
The critical path consists of the following:

 <State 16>: 0ns
The critical path consists of the following:

 <State 17>: 0ns
The critical path consists of the following:

 <State 18>: 0ns
The critical path consists of the following:

 <State 19>: 0ns
The critical path consists of the following:

 <State 20>: 0ns
The critical path consists of the following:

 <State 21>: 0ns
The critical path consists of the following:

 <State 22>: 0.978ns
The critical path consists of the following:
	'or' operation ('or_ln718_1', pixel_unpack/pixel_unpack.cpp:45) [121]  (0.978 ns)

 <State 23>: 0ns
The critical path consists of the following:

 <State 24>: 0ns
The critical path consists of the following:

 <State 25>: 0ns
The critical path consists of the following:

 <State 26>: 0ns
The critical path consists of the following:

 <State 27>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
