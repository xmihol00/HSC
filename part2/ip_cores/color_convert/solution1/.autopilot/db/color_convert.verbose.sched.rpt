

================================================================
== Vivado HLS Report for 'color_convert'
================================================================
* Date:           Mon Mar  1 13:00:24 2021

* Version:        2020.1 (Build 2897737 on Wed May 27 20:21:37 MDT 2020)
* Project:        color_convert
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+---------+----------+------------+
    |  Clock |  Target | Estimated| Uncertainty|
    +--------+---------+----------+------------+
    |ap_clk  | 7.00 ns | 6.380 ns |   0.88 ns  |
    +--------+---------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+-----+-----+----------+
    |  Latency (cycles) |   Latency (absolute)  |  Interval | Pipeline |
    |   min   |   max   |    min    |    max    | min | max |   Type   |
    +---------+---------+-----------+-----------+-----+-----+----------+
    |        6|        6| 42.000 ns | 42.000 ns |    1|    1| function |
    +---------+---------+-----------+-----------+-----+-----+----------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 0
IsPipeline: 1
IsRtlPipelined: 1
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 7


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 7
* Pipeline : 1
  Pipeline-0 : II = 1, D = 7, States = { 1 2 3 4 5 6 7 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.00>
ST_1 : Operation 8 [2/2] (1.00ns)   --->   "%bias_c3_V_read = call i10 @_ssdm_op_Read.s_axilite.i10(i10 %bias_c3_V)"   --->   Operation 8 'read' 'bias_c3_V_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 9 [2/2] (1.00ns)   --->   "%bias_c2_V_read = call i10 @_ssdm_op_Read.s_axilite.i10(i10 %bias_c2_V)"   --->   Operation 9 'read' 'bias_c2_V_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 10 [2/2] (1.00ns)   --->   "%bias_c1_V_read = call i10 @_ssdm_op_Read.s_axilite.i10(i10 %bias_c1_V)"   --->   Operation 10 'read' 'bias_c1_V_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 11 [2/2] (1.00ns)   --->   "%c3_c3_V_read = call i10 @_ssdm_op_Read.s_axilite.i10(i10 %c3_c3_V)"   --->   Operation 11 'read' 'c3_c3_V_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 12 [2/2] (1.00ns)   --->   "%c3_c2_V_read = call i10 @_ssdm_op_Read.s_axilite.i10(i10 %c3_c2_V)"   --->   Operation 12 'read' 'c3_c2_V_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 13 [2/2] (1.00ns)   --->   "%c3_c1_V_read = call i10 @_ssdm_op_Read.s_axilite.i10(i10 %c3_c1_V)"   --->   Operation 13 'read' 'c3_c1_V_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 14 [2/2] (1.00ns)   --->   "%c2_c3_V_read = call i10 @_ssdm_op_Read.s_axilite.i10(i10 %c2_c3_V)"   --->   Operation 14 'read' 'c2_c3_V_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 15 [2/2] (1.00ns)   --->   "%c2_c2_V_read = call i10 @_ssdm_op_Read.s_axilite.i10(i10 %c2_c2_V)"   --->   Operation 15 'read' 'c2_c2_V_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 16 [2/2] (1.00ns)   --->   "%c2_c1_V_read = call i10 @_ssdm_op_Read.s_axilite.i10(i10 %c2_c1_V)"   --->   Operation 16 'read' 'c2_c1_V_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 17 [2/2] (1.00ns)   --->   "%c1_c3_V_read = call i10 @_ssdm_op_Read.s_axilite.i10(i10 %c1_c3_V)"   --->   Operation 17 'read' 'c1_c3_V_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 18 [2/2] (1.00ns)   --->   "%c1_c2_V_read = call i10 @_ssdm_op_Read.s_axilite.i10(i10 %c1_c2_V)"   --->   Operation 18 'read' 'c1_c2_V_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 19 [2/2] (1.00ns)   --->   "%c1_c1_V_read = call i10 @_ssdm_op_Read.s_axilite.i10(i10 %c1_c1_V)"   --->   Operation 19 'read' 'c1_c1_V_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%empty = call { i24, i1, i1 } @_ssdm_op_Read.axis.volatile.i24P.i1P.i1P(i24* %stream_in_24_data, i1* %stream_in_24_user_V, i1* %stream_in_24_last_V)" [color_convert/color_convert.cpp:26]   --->   Operation 20 'read' 'empty' <Predicate = true> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%stream_in_24_data_tm = extractvalue { i24, i1, i1 } %empty, 0" [color_convert/color_convert.cpp:26]   --->   Operation 21 'extractvalue' 'stream_in_24_data_tm' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%stream_in_24_user_V_s = extractvalue { i24, i1, i1 } %empty, 1" [color_convert/color_convert.cpp:26]   --->   Operation 22 'extractvalue' 'stream_in_24_user_V_s' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%stream_in_24_last_V_s = extractvalue { i24, i1, i1 } %empty, 2" [color_convert/color_convert.cpp:26]   --->   Operation 23 'extractvalue' 'stream_in_24_last_V_s' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%p_Repl2_s = trunc i24 %stream_in_24_data_tm to i8" [color_convert/color_convert.cpp:42]   --->   Operation 24 'trunc' 'p_Repl2_s' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%p_Repl2_1 = call i8 @_ssdm_op_PartSelect.i8.i24.i32.i32(i24 %stream_in_24_data_tm, i32 8, i32 15)" [color_convert/color_convert.cpp:43]   --->   Operation 25 'partselect' 'p_Repl2_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%p_Repl2_2 = call i8 @_ssdm_op_PartSelect.i8.i24.i32.i32(i24 %stream_in_24_data_tm, i32 16, i32 23)" [color_convert/color_convert.cpp:44]   --->   Operation 26 'partselect' 'p_Repl2_2' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 5.52>
ST_2 : Operation 27 [1/2] (1.00ns)   --->   "%bias_c3_V_read = call i10 @_ssdm_op_Read.s_axilite.i10(i10 %bias_c3_V)"   --->   Operation 27 'read' 'bias_c3_V_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_2 : Operation 28 [1/2] (1.00ns)   --->   "%bias_c2_V_read = call i10 @_ssdm_op_Read.s_axilite.i10(i10 %bias_c2_V)"   --->   Operation 28 'read' 'bias_c2_V_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_2 : Operation 29 [1/2] (1.00ns)   --->   "%bias_c1_V_read = call i10 @_ssdm_op_Read.s_axilite.i10(i10 %bias_c1_V)"   --->   Operation 29 'read' 'bias_c1_V_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_2 : Operation 30 [1/2] (1.00ns)   --->   "%c3_c3_V_read = call i10 @_ssdm_op_Read.s_axilite.i10(i10 %c3_c3_V)"   --->   Operation 30 'read' 'c3_c3_V_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_2 : Operation 31 [1/2] (1.00ns)   --->   "%c3_c2_V_read = call i10 @_ssdm_op_Read.s_axilite.i10(i10 %c3_c2_V)"   --->   Operation 31 'read' 'c3_c2_V_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_2 : Operation 32 [1/2] (1.00ns)   --->   "%c3_c1_V_read = call i10 @_ssdm_op_Read.s_axilite.i10(i10 %c3_c1_V)"   --->   Operation 32 'read' 'c3_c1_V_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_2 : Operation 33 [1/2] (1.00ns)   --->   "%c2_c3_V_read = call i10 @_ssdm_op_Read.s_axilite.i10(i10 %c2_c3_V)"   --->   Operation 33 'read' 'c2_c3_V_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_2 : Operation 34 [1/2] (1.00ns)   --->   "%c2_c2_V_read = call i10 @_ssdm_op_Read.s_axilite.i10(i10 %c2_c2_V)"   --->   Operation 34 'read' 'c2_c2_V_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_2 : Operation 35 [1/2] (1.00ns)   --->   "%c2_c1_V_read = call i10 @_ssdm_op_Read.s_axilite.i10(i10 %c2_c1_V)"   --->   Operation 35 'read' 'c2_c1_V_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_2 : Operation 36 [1/2] (1.00ns)   --->   "%c1_c3_V_read = call i10 @_ssdm_op_Read.s_axilite.i10(i10 %c1_c3_V)"   --->   Operation 36 'read' 'c1_c3_V_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_2 : Operation 37 [1/2] (1.00ns)   --->   "%c1_c2_V_read = call i10 @_ssdm_op_Read.s_axilite.i10(i10 %c1_c2_V)"   --->   Operation 37 'read' 'c1_c2_V_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_2 : Operation 38 [1/2] (1.00ns)   --->   "%c1_c1_V_read = call i10 @_ssdm_op_Read.s_axilite.i10(i10 %c1_c1_V)"   --->   Operation 38 'read' 'c1_c1_V_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_2 : Operation 39 [1/1] (0.00ns)   --->   "%r_V = zext i8 %p_Repl2_s to i18" [color_convert/color_convert.cpp:46]   --->   Operation 39 'zext' 'r_V' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 40 [1/1] (0.00ns)   --->   "%sext_ln1118 = sext i10 %c1_c1_V_read to i18" [color_convert/color_convert.cpp:46]   --->   Operation 40 'sext' 'sext_ln1118' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 41 [1/1] (4.52ns)   --->   "%r_V_12 = mul i18 %r_V, %sext_ln1118" [color_convert/color_convert.cpp:46]   --->   Operation 41 'mul' 'r_V_12' <Predicate = true> <Delay = 4.52> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 4.52> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 42 [1/1] (0.00ns)   --->   "%r_V_2 = zext i8 %p_Repl2_1 to i18" [color_convert/color_convert.cpp:46]   --->   Operation 42 'zext' 'r_V_2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 43 [1/1] (0.00ns)   --->   "%sext_ln1118_4 = sext i10 %c2_c2_V_read to i18" [color_convert/color_convert.cpp:47]   --->   Operation 43 'sext' 'sext_ln1118_4' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 44 [1/1] (4.52ns)   --->   "%r_V_16 = mul i18 %r_V_2, %sext_ln1118_4" [color_convert/color_convert.cpp:47]   --->   Operation 44 'mul' 'r_V_16' <Predicate = true> <Delay = 4.52> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 4.52> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 45 [1/1] (0.00ns)   --->   "%sext_ln1118_7 = sext i10 %c3_c2_V_read to i18" [color_convert/color_convert.cpp:48]   --->   Operation 45 'sext' 'sext_ln1118_7' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 46 [1/1] (4.52ns)   --->   "%r_V_19 = mul i18 %r_V_2, %sext_ln1118_7" [color_convert/color_convert.cpp:48]   --->   Operation 46 'mul' 'r_V_19' <Predicate = true> <Delay = 4.52> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 4.52> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 3 <SV = 2> <Delay = 6.38>
ST_3 : Operation 47 [1/1] (0.00ns)   --->   "%sext_ln1118_1 = sext i10 %c1_c2_V_read to i18" [color_convert/color_convert.cpp:46]   --->   Operation 47 'sext' 'sext_ln1118_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 48 [1/1] (3.36ns) (grouped into DSP with root node ret_V_6)   --->   "%r_V_13 = mul i18 %r_V_2, %sext_ln1118_1" [color_convert/color_convert.cpp:46]   --->   Operation 48 'mul' 'r_V_13' <Predicate = true> <Delay = 3.36> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 6.38> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 49 [1/1] (0.00ns)   --->   "%lhs_V = sext i18 %r_V_12 to i19" [color_convert/color_convert.cpp:46]   --->   Operation 49 'sext' 'lhs_V' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 50 [1/1] (0.00ns) (grouped into DSP with root node ret_V_6)   --->   "%rhs_V = sext i18 %r_V_13 to i19" [color_convert/color_convert.cpp:46]   --->   Operation 50 'sext' 'rhs_V' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 51 [1/1] (3.02ns) (root node of the DSP)   --->   "%ret_V_6 = add nsw i19 %lhs_V, %rhs_V" [color_convert/color_convert.cpp:46]   --->   Operation 51 'add' 'ret_V_6' <Predicate = true> <Delay = 3.02> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 6.38> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 52 [1/1] (0.00ns)   --->   "%sext_ln1118_3 = sext i10 %c2_c1_V_read to i18" [color_convert/color_convert.cpp:47]   --->   Operation 52 'sext' 'sext_ln1118_3' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 53 [1/1] (3.36ns) (grouped into DSP with root node ret_V)   --->   "%r_V_15 = mul i18 %r_V, %sext_ln1118_3" [color_convert/color_convert.cpp:47]   --->   Operation 53 'mul' 'r_V_15' <Predicate = true> <Delay = 3.36> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 6.38> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 54 [1/1] (0.00ns) (grouped into DSP with root node ret_V)   --->   "%lhs_V_2 = sext i18 %r_V_15 to i19" [color_convert/color_convert.cpp:47]   --->   Operation 54 'sext' 'lhs_V_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 55 [1/1] (0.00ns)   --->   "%rhs_V_3 = sext i18 %r_V_16 to i19" [color_convert/color_convert.cpp:47]   --->   Operation 55 'sext' 'rhs_V_3' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 56 [1/1] (3.02ns) (root node of the DSP)   --->   "%ret_V = add nsw i19 %rhs_V_3, %lhs_V_2" [color_convert/color_convert.cpp:47]   --->   Operation 56 'add' 'ret_V' <Predicate = true> <Delay = 3.02> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 6.38> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 57 [1/1] (0.00ns)   --->   "%sext_ln1118_6 = sext i10 %c3_c1_V_read to i18" [color_convert/color_convert.cpp:48]   --->   Operation 57 'sext' 'sext_ln1118_6' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 58 [1/1] (3.36ns) (grouped into DSP with root node ret_V_11)   --->   "%r_V_18 = mul i18 %r_V, %sext_ln1118_6" [color_convert/color_convert.cpp:48]   --->   Operation 58 'mul' 'r_V_18' <Predicate = true> <Delay = 3.36> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 6.38> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 59 [1/1] (0.00ns) (grouped into DSP with root node ret_V_11)   --->   "%lhs_V_4 = sext i18 %r_V_18 to i19" [color_convert/color_convert.cpp:48]   --->   Operation 59 'sext' 'lhs_V_4' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 60 [1/1] (0.00ns)   --->   "%rhs_V_6 = sext i18 %r_V_19 to i19" [color_convert/color_convert.cpp:48]   --->   Operation 60 'sext' 'rhs_V_6' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 61 [1/1] (3.02ns) (root node of the DSP)   --->   "%ret_V_11 = add nsw i19 %rhs_V_6, %lhs_V_4" [color_convert/color_convert.cpp:48]   --->   Operation 61 'add' 'ret_V_11' <Predicate = true> <Delay = 3.02> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 6.38> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 4 <SV = 3> <Delay = 6.38>
ST_4 : Operation 62 [1/1] (0.00ns)   --->   "%r_V_4 = zext i8 %p_Repl2_2 to i18" [color_convert/color_convert.cpp:46]   --->   Operation 62 'zext' 'r_V_4' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 63 [1/1] (0.00ns)   --->   "%sext_ln1118_2 = sext i10 %c1_c3_V_read to i18" [color_convert/color_convert.cpp:46]   --->   Operation 63 'sext' 'sext_ln1118_2' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 64 [1/1] (3.36ns) (grouped into DSP with root node ret_V_7)   --->   "%r_V_14 = mul i18 %r_V_4, %sext_ln1118_2" [color_convert/color_convert.cpp:46]   --->   Operation 64 'mul' 'r_V_14' <Predicate = true> <Delay = 3.36> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 6.38> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 65 [1/1] (0.00ns)   --->   "%lhs_V_1 = sext i19 %ret_V_6 to i20" [color_convert/color_convert.cpp:46]   --->   Operation 65 'sext' 'lhs_V_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 66 [1/1] (0.00ns) (grouped into DSP with root node ret_V_7)   --->   "%rhs_V_1 = sext i18 %r_V_14 to i20" [color_convert/color_convert.cpp:46]   --->   Operation 66 'sext' 'rhs_V_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 67 [1/1] (3.02ns) (root node of the DSP)   --->   "%ret_V_7 = add nsw i20 %rhs_V_1, %lhs_V_1" [color_convert/color_convert.cpp:46]   --->   Operation 67 'add' 'ret_V_7' <Predicate = true> <Delay = 3.02> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 6.38> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 68 [1/1] (0.00ns)   --->   "%sext_ln1118_5 = sext i10 %c2_c3_V_read to i18" [color_convert/color_convert.cpp:47]   --->   Operation 68 'sext' 'sext_ln1118_5' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 69 [1/1] (3.36ns) (grouped into DSP with root node ret_V_9)   --->   "%r_V_17 = mul i18 %r_V_4, %sext_ln1118_5" [color_convert/color_convert.cpp:47]   --->   Operation 69 'mul' 'r_V_17' <Predicate = true> <Delay = 3.36> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 6.38> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 70 [1/1] (0.00ns)   --->   "%lhs_V_3 = sext i19 %ret_V to i20" [color_convert/color_convert.cpp:47]   --->   Operation 70 'sext' 'lhs_V_3' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 71 [1/1] (0.00ns) (grouped into DSP with root node ret_V_9)   --->   "%rhs_V_4 = sext i18 %r_V_17 to i20" [color_convert/color_convert.cpp:47]   --->   Operation 71 'sext' 'rhs_V_4' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 72 [1/1] (3.02ns) (root node of the DSP)   --->   "%ret_V_9 = add nsw i20 %rhs_V_4, %lhs_V_3" [color_convert/color_convert.cpp:47]   --->   Operation 72 'add' 'ret_V_9' <Predicate = true> <Delay = 3.02> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 6.38> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 73 [1/1] (0.00ns)   --->   "%sext_ln1118_8 = sext i10 %c3_c3_V_read to i18" [color_convert/color_convert.cpp:48]   --->   Operation 73 'sext' 'sext_ln1118_8' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 74 [1/1] (3.36ns) (grouped into DSP with root node ret_V_12)   --->   "%r_V_20 = mul i18 %r_V_4, %sext_ln1118_8" [color_convert/color_convert.cpp:48]   --->   Operation 74 'mul' 'r_V_20' <Predicate = true> <Delay = 3.36> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 6.38> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 75 [1/1] (0.00ns)   --->   "%lhs_V_5 = sext i19 %ret_V_11 to i20" [color_convert/color_convert.cpp:48]   --->   Operation 75 'sext' 'lhs_V_5' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 76 [1/1] (0.00ns) (grouped into DSP with root node ret_V_12)   --->   "%rhs_V_7 = sext i18 %r_V_20 to i20" [color_convert/color_convert.cpp:48]   --->   Operation 76 'sext' 'rhs_V_7' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 77 [1/1] (3.02ns) (root node of the DSP)   --->   "%ret_V_12 = add nsw i20 %rhs_V_7, %lhs_V_5" [color_convert/color_convert.cpp:48]   --->   Operation 77 'add' 'ret_V_12' <Predicate = true> <Delay = 3.02> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 6.38> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 5 <SV = 4> <Delay = 6.08>
ST_5 : Operation 78 [1/1] (0.00ns)   --->   "%rhs_V_2 = call i18 @_ssdm_op_BitConcatenate.i18.i10.i8(i10 %bias_c1_V_read, i8 0)" [color_convert/color_convert.cpp:46]   --->   Operation 78 'bitconcatenate' 'rhs_V_2' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 79 [1/1] (0.00ns)   --->   "%sext_ln728 = sext i18 %rhs_V_2 to i20" [color_convert/color_convert.cpp:46]   --->   Operation 79 'sext' 'sext_ln728' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 80 [1/1] (2.19ns)   --->   "%ret_V_8 = add i20 %ret_V_7, %sext_ln728" [color_convert/color_convert.cpp:46]   --->   Operation 80 'add' 'ret_V_8' <Predicate = true> <Delay = 2.19> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 81 [1/1] (0.00ns)   --->   "%p_Result_s = call i1 @_ssdm_op_BitSelect.i1.i20.i32(i20 %ret_V_8, i32 19)" [color_convert/color_convert.cpp:46]   --->   Operation 81 'bitselect' 'p_Result_s' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 82 [1/1] (0.00ns)   --->   "%p_Val2_6 = call i8 @_ssdm_op_PartSelect.i8.i20.i32.i32(i20 %ret_V_8, i32 8, i32 15)" [color_convert/color_convert.cpp:46]   --->   Operation 82 'partselect' 'p_Val2_6' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 83 [1/1] (0.00ns) (grouped into LUT with out node carry_1)   --->   "%p_Result_1 = call i1 @_ssdm_op_BitSelect.i1.i20.i32(i20 %ret_V_8, i32 15)" [color_convert/color_convert.cpp:46]   --->   Operation 83 'bitselect' 'p_Result_1' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 84 [1/1] (0.00ns)   --->   "%tmp_5 = call i1 @_ssdm_op_BitSelect.i1.i20.i32(i20 %ret_V_8, i32 7)" [color_convert/color_convert.cpp:46]   --->   Operation 84 'bitselect' 'tmp_5' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 85 [1/1] (0.00ns)   --->   "%zext_ln415 = zext i1 %tmp_5 to i8" [color_convert/color_convert.cpp:46]   --->   Operation 85 'zext' 'zext_ln415' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 86 [1/1] (1.91ns)   --->   "%p_Val2_7 = add i8 %p_Val2_6, %zext_ln415" [color_convert/color_convert.cpp:46]   --->   Operation 86 'add' 'p_Val2_7' <Predicate = true> <Delay = 1.91> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 87 [1/1] (0.00ns) (grouped into LUT with out node carry_1)   --->   "%tmp_6 = call i1 @_ssdm_op_BitSelect.i1.i8.i32(i8 %p_Val2_7, i32 7)" [color_convert/color_convert.cpp:46]   --->   Operation 87 'bitselect' 'tmp_6' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 88 [1/1] (0.00ns) (grouped into LUT with out node carry_1)   --->   "%xor_ln416 = xor i1 %tmp_6, true" [color_convert/color_convert.cpp:46]   --->   Operation 88 'xor' 'xor_ln416' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 89 [1/1] (0.97ns) (out node of the LUT)   --->   "%carry_1 = and i1 %p_Result_1, %xor_ln416" [color_convert/color_convert.cpp:46]   --->   Operation 89 'and' 'carry_1' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 90 [1/1] (0.00ns)   --->   "%tmp = call i4 @_ssdm_op_PartSelect.i4.i20.i32.i32(i20 %ret_V_8, i32 16, i32 19)" [color_convert/color_convert.cpp:46]   --->   Operation 90 'partselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 91 [1/1] (1.30ns)   --->   "%Range1_all_ones = icmp eq i4 %tmp, -1" [color_convert/color_convert.cpp:46]   --->   Operation 91 'icmp' 'Range1_all_ones' <Predicate = true> <Delay = 1.30> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.30> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 92 [1/1] (1.30ns)   --->   "%Range1_all_zeros = icmp eq i4 %tmp, 0" [color_convert/color_convert.cpp:46]   --->   Operation 92 'icmp' 'Range1_all_zeros' <Predicate = true> <Delay = 1.30> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.30> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 93 [1/1] (0.00ns) (grouped into LUT with out node or_ln785)   --->   "%deleted_zeros = select i1 %carry_1, i1 %Range1_all_ones, i1 %Range1_all_zeros" [color_convert/color_convert.cpp:46]   --->   Operation 93 'select' 'deleted_zeros' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 94 [1/1] (0.97ns)   --->   "%and_ln781 = and i1 %carry_1, %Range1_all_ones" [color_convert/color_convert.cpp:46]   --->   Operation 94 'and' 'and_ln781' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 95 [1/1] (0.99ns) (out node of the LUT)   --->   "%or_ln785 = or i1 %deleted_zeros, %p_Result_s" [color_convert/color_convert.cpp:46]   --->   Operation 95 'or' 'or_ln785' <Predicate = true> <Delay = 0.99> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 96 [1/1] (0.00ns)   --->   "%rhs_V_5 = call i18 @_ssdm_op_BitConcatenate.i18.i10.i8(i10 %bias_c2_V_read, i8 0)" [color_convert/color_convert.cpp:47]   --->   Operation 96 'bitconcatenate' 'rhs_V_5' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 97 [1/1] (0.00ns)   --->   "%sext_ln728_1 = sext i18 %rhs_V_5 to i20" [color_convert/color_convert.cpp:47]   --->   Operation 97 'sext' 'sext_ln728_1' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 98 [1/1] (2.19ns)   --->   "%ret_V_10 = add i20 %ret_V_9, %sext_ln728_1" [color_convert/color_convert.cpp:47]   --->   Operation 98 'add' 'ret_V_10' <Predicate = true> <Delay = 2.19> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 99 [1/1] (0.00ns)   --->   "%p_Result_2 = call i1 @_ssdm_op_BitSelect.i1.i20.i32(i20 %ret_V_10, i32 19)" [color_convert/color_convert.cpp:47]   --->   Operation 99 'bitselect' 'p_Result_2' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 100 [1/1] (0.00ns)   --->   "%p_Val2_14 = call i8 @_ssdm_op_PartSelect.i8.i20.i32.i32(i20 %ret_V_10, i32 8, i32 15)" [color_convert/color_convert.cpp:47]   --->   Operation 100 'partselect' 'p_Val2_14' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 101 [1/1] (0.00ns) (grouped into LUT with out node carry_3)   --->   "%p_Result_3 = call i1 @_ssdm_op_BitSelect.i1.i20.i32(i20 %ret_V_10, i32 15)" [color_convert/color_convert.cpp:47]   --->   Operation 101 'bitselect' 'p_Result_3' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 102 [1/1] (0.00ns)   --->   "%tmp_9 = call i1 @_ssdm_op_BitSelect.i1.i20.i32(i20 %ret_V_10, i32 7)" [color_convert/color_convert.cpp:47]   --->   Operation 102 'bitselect' 'tmp_9' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 103 [1/1] (0.00ns)   --->   "%zext_ln415_1 = zext i1 %tmp_9 to i8" [color_convert/color_convert.cpp:47]   --->   Operation 103 'zext' 'zext_ln415_1' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 104 [1/1] (1.91ns)   --->   "%p_Val2_15 = add i8 %zext_ln415_1, %p_Val2_14" [color_convert/color_convert.cpp:47]   --->   Operation 104 'add' 'p_Val2_15' <Predicate = true> <Delay = 1.91> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 105 [1/1] (0.00ns) (grouped into LUT with out node carry_3)   --->   "%tmp_10 = call i1 @_ssdm_op_BitSelect.i1.i8.i32(i8 %p_Val2_15, i32 7)" [color_convert/color_convert.cpp:47]   --->   Operation 105 'bitselect' 'tmp_10' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 106 [1/1] (0.00ns) (grouped into LUT with out node carry_3)   --->   "%xor_ln416_1 = xor i1 %tmp_10, true" [color_convert/color_convert.cpp:47]   --->   Operation 106 'xor' 'xor_ln416_1' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 107 [1/1] (0.97ns) (out node of the LUT)   --->   "%carry_3 = and i1 %p_Result_3, %xor_ln416_1" [color_convert/color_convert.cpp:47]   --->   Operation 107 'and' 'carry_3' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 108 [1/1] (0.00ns)   --->   "%tmp_1 = call i4 @_ssdm_op_PartSelect.i4.i20.i32.i32(i20 %ret_V_10, i32 16, i32 19)" [color_convert/color_convert.cpp:47]   --->   Operation 108 'partselect' 'tmp_1' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 109 [1/1] (1.30ns)   --->   "%Range1_all_ones_1 = icmp eq i4 %tmp_1, -1" [color_convert/color_convert.cpp:47]   --->   Operation 109 'icmp' 'Range1_all_ones_1' <Predicate = true> <Delay = 1.30> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.30> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 110 [1/1] (1.30ns)   --->   "%Range1_all_zeros_1 = icmp eq i4 %tmp_1, 0" [color_convert/color_convert.cpp:47]   --->   Operation 110 'icmp' 'Range1_all_zeros_1' <Predicate = true> <Delay = 1.30> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.30> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 111 [1/1] (0.00ns) (grouped into LUT with out node or_ln785_1)   --->   "%deleted_zeros_1 = select i1 %carry_3, i1 %Range1_all_ones_1, i1 %Range1_all_zeros_1" [color_convert/color_convert.cpp:47]   --->   Operation 111 'select' 'deleted_zeros_1' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 112 [1/1] (0.97ns)   --->   "%and_ln781_1 = and i1 %carry_3, %Range1_all_ones_1" [color_convert/color_convert.cpp:47]   --->   Operation 112 'and' 'and_ln781_1' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 113 [1/1] (0.99ns) (out node of the LUT)   --->   "%or_ln785_1 = or i1 %deleted_zeros_1, %p_Result_2" [color_convert/color_convert.cpp:47]   --->   Operation 113 'or' 'or_ln785_1' <Predicate = true> <Delay = 0.99> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 114 [1/1] (0.00ns)   --->   "%rhs_V_8 = call i18 @_ssdm_op_BitConcatenate.i18.i10.i8(i10 %bias_c3_V_read, i8 0)" [color_convert/color_convert.cpp:48]   --->   Operation 114 'bitconcatenate' 'rhs_V_8' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 115 [1/1] (0.00ns)   --->   "%sext_ln728_2 = sext i18 %rhs_V_8 to i20" [color_convert/color_convert.cpp:48]   --->   Operation 115 'sext' 'sext_ln728_2' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 116 [1/1] (2.19ns)   --->   "%ret_V_13 = add i20 %ret_V_12, %sext_ln728_2" [color_convert/color_convert.cpp:48]   --->   Operation 116 'add' 'ret_V_13' <Predicate = true> <Delay = 2.19> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 117 [1/1] (0.00ns)   --->   "%p_Result_4 = call i1 @_ssdm_op_BitSelect.i1.i20.i32(i20 %ret_V_13, i32 19)" [color_convert/color_convert.cpp:48]   --->   Operation 117 'bitselect' 'p_Result_4' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 118 [1/1] (0.00ns)   --->   "%p_Val2_22 = call i8 @_ssdm_op_PartSelect.i8.i20.i32.i32(i20 %ret_V_13, i32 8, i32 15)" [color_convert/color_convert.cpp:48]   --->   Operation 118 'partselect' 'p_Val2_22' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 119 [1/1] (0.00ns) (grouped into LUT with out node carry_5)   --->   "%p_Result_5 = call i1 @_ssdm_op_BitSelect.i1.i20.i32(i20 %ret_V_13, i32 15)" [color_convert/color_convert.cpp:48]   --->   Operation 119 'bitselect' 'p_Result_5' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 120 [1/1] (0.00ns)   --->   "%tmp_13 = call i1 @_ssdm_op_BitSelect.i1.i20.i32(i20 %ret_V_13, i32 7)" [color_convert/color_convert.cpp:48]   --->   Operation 120 'bitselect' 'tmp_13' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 121 [1/1] (0.00ns)   --->   "%zext_ln415_2 = zext i1 %tmp_13 to i8" [color_convert/color_convert.cpp:48]   --->   Operation 121 'zext' 'zext_ln415_2' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 122 [1/1] (1.91ns)   --->   "%p_Val2_23 = add i8 %zext_ln415_2, %p_Val2_22" [color_convert/color_convert.cpp:48]   --->   Operation 122 'add' 'p_Val2_23' <Predicate = true> <Delay = 1.91> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 123 [1/1] (0.00ns) (grouped into LUT with out node carry_5)   --->   "%tmp_14 = call i1 @_ssdm_op_BitSelect.i1.i8.i32(i8 %p_Val2_23, i32 7)" [color_convert/color_convert.cpp:48]   --->   Operation 123 'bitselect' 'tmp_14' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 124 [1/1] (0.00ns) (grouped into LUT with out node carry_5)   --->   "%xor_ln416_2 = xor i1 %tmp_14, true" [color_convert/color_convert.cpp:48]   --->   Operation 124 'xor' 'xor_ln416_2' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 125 [1/1] (0.97ns) (out node of the LUT)   --->   "%carry_5 = and i1 %p_Result_5, %xor_ln416_2" [color_convert/color_convert.cpp:48]   --->   Operation 125 'and' 'carry_5' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 126 [1/1] (0.00ns)   --->   "%tmp_2 = call i4 @_ssdm_op_PartSelect.i4.i20.i32.i32(i20 %ret_V_13, i32 16, i32 19)" [color_convert/color_convert.cpp:48]   --->   Operation 126 'partselect' 'tmp_2' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 127 [1/1] (1.30ns)   --->   "%Range1_all_ones_2 = icmp eq i4 %tmp_2, -1" [color_convert/color_convert.cpp:48]   --->   Operation 127 'icmp' 'Range1_all_ones_2' <Predicate = true> <Delay = 1.30> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.30> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 128 [1/1] (1.30ns)   --->   "%Range1_all_zeros_2 = icmp eq i4 %tmp_2, 0" [color_convert/color_convert.cpp:48]   --->   Operation 128 'icmp' 'Range1_all_zeros_2' <Predicate = true> <Delay = 1.30> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.30> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 129 [1/1] (0.00ns) (grouped into LUT with out node or_ln785_2)   --->   "%deleted_zeros_2 = select i1 %carry_5, i1 %Range1_all_ones_2, i1 %Range1_all_zeros_2" [color_convert/color_convert.cpp:48]   --->   Operation 129 'select' 'deleted_zeros_2' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 130 [1/1] (0.97ns)   --->   "%and_ln781_2 = and i1 %carry_5, %Range1_all_ones_2" [color_convert/color_convert.cpp:48]   --->   Operation 130 'and' 'and_ln781_2' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 131 [1/1] (0.99ns) (out node of the LUT)   --->   "%or_ln785_2 = or i1 %deleted_zeros_2, %p_Result_4" [color_convert/color_convert.cpp:48]   --->   Operation 131 'or' 'or_ln785_2' <Predicate = true> <Delay = 0.99> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>

State 6 <SV = 5> <Delay = 2.49>
ST_6 : Operation 132 [1/1] (0.00ns) (grouped into LUT with out node select_ln396)   --->   "%xor_ln781 = xor i1 %and_ln781, true" [color_convert/color_convert.cpp:46]   --->   Operation 132 'xor' 'xor_ln781' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 133 [1/1] (0.00ns) (grouped into LUT with out node select_ln396)   --->   "%neg_src = and i1 %p_Result_s, %xor_ln781" [color_convert/color_convert.cpp:46]   --->   Operation 133 'and' 'neg_src' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 134 [1/1] (0.00ns) (grouped into LUT with out node out1_V)   --->   "%overflow = xor i1 %or_ln785, true" [color_convert/color_convert.cpp:46]   --->   Operation 134 'xor' 'overflow' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 135 [1/1] (0.00ns) (grouped into LUT with out node or_ln340_3)   --->   "%xor_ln340_1 = xor i1 %p_Result_s, true" [color_convert/color_convert.cpp:46]   --->   Operation 135 'xor' 'xor_ln340_1' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 136 [1/1] (0.97ns) (out node of the LUT)   --->   "%or_ln340_3 = or i1 %and_ln781, %xor_ln340_1" [color_convert/color_convert.cpp:46]   --->   Operation 136 'or' 'or_ln340_3' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 137 [1/1] (0.00ns) (grouped into LUT with out node out1_V)   --->   "%and_ln340 = and i1 %or_ln785, %or_ln340_3" [color_convert/color_convert.cpp:46]   --->   Operation 137 'and' 'and_ln340' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 138 [1/1] (0.00ns) (grouped into LUT with out node out1_V)   --->   "%or_ln340 = or i1 %or_ln340_3, %overflow" [color_convert/color_convert.cpp:46]   --->   Operation 138 'or' 'or_ln340' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 139 [1/1] (0.00ns) (grouped into LUT with out node out1_V)   --->   "%select_ln340 = select i1 %and_ln340, i8 %p_Val2_7, i8 -1" [color_convert/color_convert.cpp:46]   --->   Operation 139 'select' 'select_ln340' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : Operation 140 [1/1] (1.24ns) (out node of the LUT)   --->   "%select_ln396 = select i1 %neg_src, i8 0, i8 %p_Val2_7" [color_convert/color_convert.cpp:46]   --->   Operation 140 'select' 'select_ln396' <Predicate = true> <Delay = 1.24> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : Operation 141 [1/1] (1.24ns) (out node of the LUT)   --->   "%out1_V = select i1 %or_ln340, i8 %select_ln340, i8 %select_ln396" [color_convert/color_convert.cpp:46]   --->   Operation 141 'select' 'out1_V' <Predicate = true> <Delay = 1.24> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : Operation 142 [1/1] (0.00ns) (grouped into LUT with out node select_ln396_1)   --->   "%xor_ln781_1 = xor i1 %and_ln781_1, true" [color_convert/color_convert.cpp:47]   --->   Operation 142 'xor' 'xor_ln781_1' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 143 [1/1] (0.00ns) (grouped into LUT with out node select_ln396_1)   --->   "%neg_src_6 = and i1 %p_Result_2, %xor_ln781_1" [color_convert/color_convert.cpp:47]   --->   Operation 143 'and' 'neg_src_6' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 144 [1/1] (0.00ns) (grouped into LUT with out node out2_V)   --->   "%overflow_1 = xor i1 %or_ln785_1, true" [color_convert/color_convert.cpp:47]   --->   Operation 144 'xor' 'overflow_1' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 145 [1/1] (0.00ns) (grouped into LUT with out node or_ln340_4)   --->   "%xor_ln340 = xor i1 %p_Result_2, true" [color_convert/color_convert.cpp:47]   --->   Operation 145 'xor' 'xor_ln340' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 146 [1/1] (0.97ns) (out node of the LUT)   --->   "%or_ln340_4 = or i1 %and_ln781_1, %xor_ln340" [color_convert/color_convert.cpp:47]   --->   Operation 146 'or' 'or_ln340_4' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 147 [1/1] (0.00ns) (grouped into LUT with out node out2_V)   --->   "%and_ln340_1 = and i1 %or_ln785_1, %or_ln340_4" [color_convert/color_convert.cpp:47]   --->   Operation 147 'and' 'and_ln340_1' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 148 [1/1] (0.00ns) (grouped into LUT with out node out2_V)   --->   "%or_ln340_1 = or i1 %or_ln340_4, %overflow_1" [color_convert/color_convert.cpp:47]   --->   Operation 148 'or' 'or_ln340_1' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 149 [1/1] (0.00ns) (grouped into LUT with out node out2_V)   --->   "%select_ln340_1 = select i1 %and_ln340_1, i8 %p_Val2_15, i8 -1" [color_convert/color_convert.cpp:47]   --->   Operation 149 'select' 'select_ln340_1' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : Operation 150 [1/1] (1.24ns) (out node of the LUT)   --->   "%select_ln396_1 = select i1 %neg_src_6, i8 0, i8 %p_Val2_15" [color_convert/color_convert.cpp:47]   --->   Operation 150 'select' 'select_ln396_1' <Predicate = true> <Delay = 1.24> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : Operation 151 [1/1] (1.24ns) (out node of the LUT)   --->   "%out2_V = select i1 %or_ln340_1, i8 %select_ln340_1, i8 %select_ln396_1" [color_convert/color_convert.cpp:47]   --->   Operation 151 'select' 'out2_V' <Predicate = true> <Delay = 1.24> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : Operation 152 [1/1] (0.00ns) (grouped into LUT with out node select_ln396_2)   --->   "%xor_ln781_2 = xor i1 %and_ln781_2, true" [color_convert/color_convert.cpp:48]   --->   Operation 152 'xor' 'xor_ln781_2' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 153 [1/1] (0.00ns) (grouped into LUT with out node select_ln396_2)   --->   "%neg_src_7 = and i1 %p_Result_4, %xor_ln781_2" [color_convert/color_convert.cpp:48]   --->   Operation 153 'and' 'neg_src_7' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 154 [1/1] (0.00ns) (grouped into LUT with out node out3_V)   --->   "%overflow_2 = xor i1 %or_ln785_2, true" [color_convert/color_convert.cpp:48]   --->   Operation 154 'xor' 'overflow_2' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 155 [1/1] (0.00ns) (grouped into LUT with out node or_ln340_5)   --->   "%xor_ln340_2 = xor i1 %p_Result_4, true" [color_convert/color_convert.cpp:48]   --->   Operation 155 'xor' 'xor_ln340_2' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 156 [1/1] (0.97ns) (out node of the LUT)   --->   "%or_ln340_5 = or i1 %and_ln781_2, %xor_ln340_2" [color_convert/color_convert.cpp:48]   --->   Operation 156 'or' 'or_ln340_5' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 157 [1/1] (0.00ns) (grouped into LUT with out node out3_V)   --->   "%and_ln340_2 = and i1 %or_ln785_2, %or_ln340_5" [color_convert/color_convert.cpp:48]   --->   Operation 157 'and' 'and_ln340_2' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 158 [1/1] (0.00ns) (grouped into LUT with out node out3_V)   --->   "%or_ln340_2 = or i1 %or_ln340_5, %overflow_2" [color_convert/color_convert.cpp:48]   --->   Operation 158 'or' 'or_ln340_2' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 159 [1/1] (0.00ns) (grouped into LUT with out node out3_V)   --->   "%select_ln340_2 = select i1 %and_ln340_2, i8 %p_Val2_23, i8 -1" [color_convert/color_convert.cpp:48]   --->   Operation 159 'select' 'select_ln340_2' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : Operation 160 [1/1] (1.24ns) (out node of the LUT)   --->   "%select_ln396_2 = select i1 %neg_src_7, i8 0, i8 %p_Val2_23" [color_convert/color_convert.cpp:48]   --->   Operation 160 'select' 'select_ln396_2' <Predicate = true> <Delay = 1.24> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : Operation 161 [1/1] (1.24ns) (out node of the LUT)   --->   "%out3_V = select i1 %or_ln340_2, i8 %select_ln340_2, i8 %select_ln396_2" [color_convert/color_convert.cpp:48]   --->   Operation 161 'select' 'out3_V' <Predicate = true> <Delay = 1.24> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : Operation 162 [1/1] (0.00ns)   --->   "%stream_out_24_data_t = call i24 @_ssdm_op_BitConcatenate.i24.i8.i8.i8(i8 %out3_V, i8 %out2_V, i8 %out1_V)" [color_convert/color_convert.cpp:52]   --->   Operation 162 'bitconcatenate' 'stream_out_24_data_t' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 163 [2/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i24P.i1P.i1P(i24* %stream_out_24_data, i1* %stream_out_24_user_V, i1* %stream_out_24_last_V, i24 %stream_out_24_data_t, i1 %stream_in_24_user_V_s, i1 %stream_in_24_last_V_s)" [color_convert/color_convert.cpp:26]   --->   Operation 163 'write' <Predicate = true> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >

State 7 <SV = 6> <Delay = 0.00>
ST_7 : Operation 164 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i24* %stream_out_24_data), !map !73"   --->   Operation 164 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 165 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i24* %stream_in_24_data), !map !85"   --->   Operation 165 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 166 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %stream_in_24_user_V), !map !95"   --->   Operation 166 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 167 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %stream_in_24_last_V), !map !99"   --->   Operation 167 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 168 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %stream_out_24_user_V), !map !103"   --->   Operation 168 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 169 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %stream_out_24_last_V), !map !107"   --->   Operation 169 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 170 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i10 %c1_c1_V), !map !111"   --->   Operation 170 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 171 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i10 %c1_c2_V), !map !117"   --->   Operation 171 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 172 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i10 %c1_c3_V), !map !121"   --->   Operation 172 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 173 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i10 %c2_c1_V), !map !125"   --->   Operation 173 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 174 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i10 %c2_c2_V), !map !129"   --->   Operation 174 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 175 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i10 %c2_c3_V), !map !133"   --->   Operation 175 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 176 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i10 %c3_c1_V), !map !137"   --->   Operation 176 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 177 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i10 %c3_c2_V), !map !141"   --->   Operation 177 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 178 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i10 %c3_c3_V), !map !145"   --->   Operation 178 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 179 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i10 %bias_c1_V), !map !149"   --->   Operation 179 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 180 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i10 %bias_c2_V), !map !153"   --->   Operation 180 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 181 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i10 %bias_c3_V), !map !157"   --->   Operation 181 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 182 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([14 x i8]* @color_convert_str) nounwind"   --->   Operation 182 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 183 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecClockDomain([8 x i8]* @p_str, [1 x i8]* @p_str1) nounwind" [color_convert/color_convert.cpp:28]   --->   Operation 183 'specclockdomain' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 184 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 0, [13 x i8]* @p_str2, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [color_convert/color_convert.cpp:29]   --->   Operation 184 'specinterface' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 185 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i10 %c1_c1_V, i10 %c1_c2_V, i10 %c1_c3_V, [10 x i8]* @p_str3, i32 1, i32 1, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [8 x i8]* @p_str4, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [color_convert/color_convert.cpp:30]   --->   Operation 185 'specinterface' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 186 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i10 %c2_c1_V, i10 %c2_c2_V, i10 %c2_c3_V, [10 x i8]* @p_str3, i32 1, i32 1, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [8 x i8]* @p_str4, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [color_convert/color_convert.cpp:31]   --->   Operation 186 'specinterface' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 187 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i10 %c3_c1_V, i10 %c3_c2_V, i10 %c3_c3_V, [10 x i8]* @p_str3, i32 1, i32 1, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [8 x i8]* @p_str4, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [color_convert/color_convert.cpp:32]   --->   Operation 187 'specinterface' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 188 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i10 %bias_c1_V, i10 %bias_c2_V, i10 %bias_c3_V, [10 x i8]* @p_str3, i32 1, i32 1, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [8 x i8]* @p_str4, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [color_convert/color_convert.cpp:33]   --->   Operation 188 'specinterface' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 189 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i24* %stream_in_24_data, i1* %stream_in_24_user_V, i1* %stream_in_24_last_V, [5 x i8]* @p_str5, i32 1, i32 1, [5 x i8]* @p_str6, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [color_convert/color_convert.cpp:34]   --->   Operation 189 'specinterface' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 190 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i24* %stream_out_24_data, i1* %stream_out_24_user_V, i1* %stream_out_24_last_V, [5 x i8]* @p_str5, i32 1, i32 1, [5 x i8]* @p_str6, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [color_convert/color_convert.cpp:35]   --->   Operation 190 'specinterface' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 191 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind" [color_convert/color_convert.cpp:37]   --->   Operation 191 'specpipeline' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 192 [1/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i24P.i1P.i1P(i24* %stream_out_24_data, i1* %stream_out_24_user_V, i1* %stream_out_24_last_V, i24 %stream_out_24_data_t, i1 %stream_in_24_user_V_s, i1 %stream_in_24_last_V_s)" [color_convert/color_convert.cpp:26]   --->   Operation 192 'write' <Predicate = true> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_7 : Operation 193 [1/1] (0.00ns)   --->   "ret void" [color_convert/color_convert.cpp:53]   --->   Operation 193 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 7ns, clock uncertainty: 0.875ns.

 <State 1>: 1ns
The critical path consists of the following:
	s_axi read on port 'bias_c3_V' [19]  (1 ns)

 <State 2>: 5.52ns
The critical path consists of the following:
	s_axi read on port 'c3_c2_V' [23]  (1 ns)
	'mul' operation ('r.V', color_convert/color_convert.cpp:48) [152]  (4.52 ns)

 <State 3>: 6.38ns
The critical path consists of the following:
	'mul' operation of DSP[74] ('r.V', color_convert/color_convert.cpp:46) [71]  (3.36 ns)
	'add' operation of DSP[74] ('ret.V', color_convert/color_convert.cpp:46) [74]  (3.02 ns)

 <State 4>: 6.38ns
The critical path consists of the following:
	'mul' operation of DSP[80] ('r.V', color_convert/color_convert.cpp:46) [77]  (3.36 ns)
	'add' operation of DSP[80] ('ret.V', color_convert/color_convert.cpp:46) [80]  (3.02 ns)

 <State 5>: 6.08ns
The critical path consists of the following:
	'add' operation ('ret.V', color_convert/color_convert.cpp:46) [83]  (2.2 ns)
	'add' operation ('__Val2__', color_convert/color_convert.cpp:46) [89]  (1.92 ns)
	'xor' operation ('xor_ln416', color_convert/color_convert.cpp:46) [91]  (0 ns)
	'and' operation ('carry', color_convert/color_convert.cpp:46) [92]  (0.978 ns)
	'select' operation ('deleted_zeros', color_convert/color_convert.cpp:46) [96]  (0 ns)
	'or' operation ('or_ln785', color_convert/color_convert.cpp:46) [100]  (0.993 ns)

 <State 6>: 2.5ns
The critical path consists of the following:
	'xor' operation ('xor_ln781', color_convert/color_convert.cpp:46) [98]  (0 ns)
	'and' operation ('neg_src', color_convert/color_convert.cpp:46) [99]  (0 ns)
	'select' operation ('select_ln396', color_convert/color_convert.cpp:46) [107]  (1.25 ns)
	'select' operation ('out1.V', color_convert/color_convert.cpp:46) [108]  (1.25 ns)

 <State 7>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
